-Käyttäjänä voin tarkastella tietokannassa olevien kirjojen tietoja.

SQL-kysely:SELECT book.id AS book_id, book.title AS book_title, book.author AS book_author,
book.year AS book_year, book.language AS book_language, book.price AS book_price, 
book.amount AS book_amount, book.available AS book_available FROM book;

-Käyttäjänä voin etsiä tietokannasta kirjoja nimen ja tekijän nimen perusteella.

SQL-kysely: SELECT book.id AS book_id, book.title AS book_title, book.author AS book_author, 
book.year AS book_year, book.language AS book_language, book.price AS book_price, 
book.amount AS book_amount, book.available AS book_available FROM book 
WHERE (book.title LIKE '% ? %');

tai .... WHERE(book.author LIKE '% ? %');

-Käyttäjänä näen kullakin hetkellä kolme myydyintä kirjaa kaupan aloitusivulla.

SQL-kysely: SELECT Book.title, Book.id FROM Book WHERE Book.id IN 
(SELECT book_id FROM order_item GROUP BY book_id ORDER BY COUNT(book_id) DESC LIMIT 3);

-Käyttäjänä voin luoda profiilin ja rekisteröityä sovellukseen.

SQL-kysely:  INSERT INTO account (date_created, date_modified, name, e_mail, address, 
username, password) VALUES (CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, ?, ?, ?, ?, ?);

-Käyttäjänä voin valita statuksekseni joko asiakas tai työntekijä.

SQL-kysely: INSERT INTO user_role (account_id, role_id) VALUES (?, ?);

-Rekisteröityneenä käyttäjänä voin poistaa oman käyttäjäprofiilini

SQL-kysely:DELETE FROM account WHERE account.id = ?;

-Rekisteröityneenä käyttäjänä voin päivittää käyttäjäprofiilini tietoja

SQL-kysely (esim. kun päivitetään osoitetietoja): UPDATE account SET date_modified=CURRENT_TIMESTAMP, address=? WHERE account.id = ?;

-Työntekijnä voin muokata tietokantaan talletettujen kirjojen saatavuustietoja.

SQL-kysely: UPDATE book SET amount=?, available=? WHERE book.id = ?;

-Työntekijänä pystyn lisäämään uuden kirjan tietokantaan.

SQL-kysely: INSERT INTO book (title, author, year, language, price, amount, available) 
VALUES (?, ?, ?, ?, ?, ?, ?);

-Työntekijänä pystyn poistamaan kirjan tietokannasta.

SQL-kysely: DELETE FROM book WHERE book.id = ?;

-Työntekijänä voin tarkastella listaa kaikista kauppaan rekisteröityneistä käyttäjistä.

SQL-kyselyt: SELECT account.id AS account_id, account.date_created AS account_date_created, 
account.date_modified AS account_date_modified, account.name AS account_name, account.e_mail AS account_e_mail, 
account.address AS account_address, account.username AS account_username, account.password AS account_password 
FROM account WHERE account.id = ?;

SELECT role.id AS role_id, role.name AS role_name FROM role, user_role 
WHERE ? = user_role.account_id AND role.id = user_role.role_id;

-Työntekijänä voin taskastella listaa kaikista tehdyistä tilauksista.

SQL-kysely: SELECT "order".id AS order_id, "order".date AS order_date, 
"order".name AS order_name, "order".e_mail AS order_e_mail, "order".address 
AS order_address, "order".price AS order_price, "order".user_id AS order_user_id 
FROM "order" WHERE ? = "order".user_id;

-Työntekijänä voin poistaa tilauksen tietokannasta.

SQL-kysely: DELETE FROM "order" WHERE "order".id = ?;

-Asiakkaana voin lisätä kirjoja ostoskoriin.

SQL-kysely: INSERT INTO shopping_cart (book_id, account_id) VALUES (?, ?);

-Asiakkaana voin poistaa kirjoja ostoskorista.

SQL-kysely: DELETE FROM shopping_cart WHERE shopping_cart.book_id = ? AND shopping_cart.account_id = ?;

-Asiakkaana voin tilata ostoskoriin valitsemani kirjat.

SQL-kyselyt: 
UPDATE book SET amount=? WHERE book.id = ?;
INSERT INTO "order" (name, e_mail, address, price, user_id) VALUES (?, ?, ?, ?, ?);
INSERT INTO order_item (book_id, order_id) VALUES (?, ?);

-Asiakkaana voin tarkastella listaa aiemmista tilauksistani. 

SQL-kysely: SELECT "order".id AS order_id, "order".date AS order_date, "order".name AS order_name, 
"order".e_mail AS order_e_mail, "order".address AS order_address, "order".price AS order_price, 
"order".user_id AS order_user_id FROM "order" WHERE ? = "order".user_id;

